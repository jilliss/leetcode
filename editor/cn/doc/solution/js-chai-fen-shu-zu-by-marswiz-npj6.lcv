# 思路

1. 只要在任何时刻，车上的乘客数不超过车的容量，也就是`sum <= capacity`，就可以完成任务；
2. 给定乘客的上车、下车时刻，相当于给定了区间和区间增量，我们要求区间内任意时刻的值，很容易想到用差分数组+前缀和来实现；
3. 假设n名乘客的上车、下车时刻为`s和e`，那么他在车上的时间范围为`[s,e-1]`，我们需要在差分数组`diff[s]`加上n，`diff[e]`位置减去n；
4. 最后计算差分数组各位置的前缀和，判断是否有超过容量的时刻。

# 实现

* js

```js
var carPooling = function(trips, capacity) {
    // [num_passengers, start_location, end_location]
    // [0, 1, 2, 3, 4]
    // [1, 2) -> [1, 1]
    let diff = new Array(1002).fill(0);
    let sum = 0;
    for (let [n, s, e] of trips) {
        diff[s] += n;
        diff[e] -= n; // e - 1 + 1
    }
    for (let i=0; i<diff.length; i++) {
        sum += diff[i];
        if(sum > capacity) return false;
    }
    return true;
};
```

